{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      orders: [],\n      currentPage: 1,\n      totalPages: 0,\n      pageSize: 10,\n      backendUrl: 'http://localhost:3000'\n    };\n  },\n  async created() {\n    await this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await fetch(`${this.backendUrl}/api/orders?page=${this.currentPage}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          if (response.status === 401) {\n            console.warn('Неавторизован, перенаправление на /login');\n            this.$router.push('/login');\n            return;\n          }\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Полученные данные заказов:', data); // Логирование\n        this.orders = data.orders || [];\n        this.totalPages = data.totalPages || 0;\n        this.currentPage = data.currentPage || 1;\n      } catch (err) {\n        console.error('Ошибка при получении заказов:', err);\n        this.orders = [];\n        this.totalPages = 0;\n      }\n    },\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchOrders();\n      }\n    },\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchOrders();\n      }\n    },\n    viewOrder(id) {\n      if (!id || isNaN(id)) {\n        console.error('Некорректный ID заказа:', id);\n        return;\n      }\n      console.log('Переход к просмотру заказа с ID:', id); // Логирование\n      this.$router.push(`/view-order/${id}`);\n    },\n    editOrder(id) {\n      this.$router.push(`/edit-order/${id}`);\n    },\n    async deleteOrder(id) {\n      if (!confirm('Вы уверены, что хотите удалить этот заказ?')) {\n        return;\n      }\n      try {\n        const response = await fetch(`${this.backendUrl}/delete-order/${id}`, {\n          method: 'DELETE',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          const errorText = await response.json();\n          throw new Error(`Ошибка сервера: ${response.status} ${errorText.error}`);\n        }\n        await this.fetchOrders(); // Обновить список\n      } catch (err) {\n        console.error('Ошибка при удалении заказа:', err);\n        alert(`Ошибка: ${err.message}`);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","orders","currentPage","totalPages","pageSize","backendUrl","created","fetchOrders","methods","response","fetch","method","credentials","ok","status","console","warn","$router","push","Error","json","log","err","error","prevPage","nextPage","viewOrder","id","isNaN","editOrder","deleteOrder","confirm","errorText","alert","message"],"sources":["/home/vas/vueapp/vueapp/src/components/OrdersList.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"app-container\">\n      <h1 class=\"page-title\">Список заказов</h1>\n      <div class=\"table-container\">\n        <table class=\"styled-table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Имя клиента</th>\n              <th>Дата заказа</th>\n              <th>Сумма (₽)</th>\n              <th>Статус</th>\n              <th>Адрес доставки</th>\n              <th>Изображение</th>\n              <th class=\"actions-column\">Действия</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(order, index) in orders\" :key=\"order.id\" class=\"table-row\">\n              <td>{{ (currentPage - 1) * pageSize + index + 1 }}</td>\n              <td>{{ order.client_name || 'N/A' }}</td>\n              <td>{{ order.order_date ? order.order_date.split('T')[0] : 'N/A' }}</td>\n              <td>{{ order.total_amount ? Math.floor(order.total_amount) + ' ₽' : 'N/A' }}</td>\n              <td>\n                <span :class=\"['status', order.status ? `status-${order.status.replace(' ', '-')}` : '']\">\n                  {{ order.status || 'N/A' }}\n                </span>\n              </td>\n              <td>{{ order.delivery_address || 'N/A' }}</td>\n              <td>\n                <img v-if=\"order.image\" :src=\"`${backendUrl}${order.image}`\" alt=\"Order Image\" class=\"pet-image\" />\n                <span v-else>N/A</span>\n              </td>\n              <td class=\"actions-column\">\n                <div class=\"action-button-container\" @click=\"viewOrder(order.id)\">\n                  <i class=\"fas fa-eye\"></i>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p v-if=\"!orders.length\" class=\"no-pets-message\">Нет доступных заказов.</p>\n        <div class=\"pagination\" v-if=\"totalPages > 1\">\n          <button @click=\"prevPage\" :disabled=\"currentPage === 1\">← Предыдущая</button>\n          <span>Страница {{ currentPage }} из {{ totalPages }}</span>\n          <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Следующая →</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      orders: [],\n      currentPage: 1,\n      totalPages: 0,\n      pageSize: 10,\n      backendUrl: 'http://localhost:3000',\n    };\n  },\n  async created() {\n    await this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await fetch(`${this.backendUrl}/api/orders?page=${this.currentPage}`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          if (response.status === 401) {\n            console.warn('Неавторизован, перенаправление на /login');\n            this.$router.push('/login');\n            return;\n          }\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Полученные данные заказов:', data); // Логирование\n        this.orders = data.orders || [];\n        this.totalPages = data.totalPages || 0;\n        this.currentPage = data.currentPage || 1;\n      } catch (err) {\n        console.error('Ошибка при получении заказов:', err);\n        this.orders = [];\n        this.totalPages = 0;\n      }\n    },\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchOrders();\n      }\n    },\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchOrders();\n      }\n    },\n    viewOrder(id) {\n      if (!id || isNaN(id)) {\n        console.error('Некорректный ID заказа:', id);\n        return;\n      }\n      console.log('Переход к просмотру заказа с ID:', id); // Логирование\n      this.$router.push(`/view-order/${id}`);\n    },\n    editOrder(id) {\n      this.$router.push(`/edit-order/${id}`);\n    },\n    async deleteOrder(id) {\n      if (!confirm('Вы уверены, что хотите удалить этот заказ?')) {\n        return;\n      }\n      try {\n        const response = await fetch(`${this.backendUrl}/delete-order/${id}`, {\n          method: 'DELETE',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          const errorText = await response.json();\n          throw new Error(`Ошибка сервера: ${response.status} ${errorText.error}`);\n        }\n        await this.fetchOrders(); // Обновить список\n      } catch (err) {\n        console.error('Ошибка при удалении заказа:', err);\n        alert(`Ошибка: ${err.message}`);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Стили остаются без изменений, так как они уже согласованы */\n.app-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #1a1a1a, #333333);\n  color: #d4af37;\n  padding: 20px;\n}\n\n.page-title {\n  text-align: center;\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #d4af37;\n}\n\n.table-container {\n  width: 100%;\n  max-width: 1200px;\n  background: rgba(26, 26, 26, 0.2);\n  backdrop-filter: blur(10px);\n  border-radius: 16px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n  overflow: hidden;\n  padding: 20px;\n}\n\n.styled-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  border-radius: 16px;\n  overflow: hidden;\n  margin-top: 20px;\n}\n\n.styled-table th {\n  background: rgba(26, 26, 26, 0.3);\n  color: #d4af37;\n  font-weight: bold;\n  padding: 15px;\n  text-align: center;\n  border-bottom: none;\n  border-right: none;\n}\n\n.styled-table td {\n  background: rgba(26, 26, 26, 0.1);\n  color: #d4af37;\n  padding: 15px;\n  text-align: center;\n  border-bottom: 1px solid rgba(212, 175, 55, 0.3);\n  border-right: 1px solid rgba(212, 175, 55, 0.3);\n}\n\n.styled-table th:last-child,\n.styled-table td:last-child {\n  border-right: none;\n}\n\n.styled-table tbody tr:last-child td {\n  border-bottom: none;\n}\n\n.styled-table tbody tr:hover {\n  background-color: rgba(212, 175, 55, 0.1);\n  cursor: pointer;\n}\n\n.actions-column {\n  width: 150px;\n}\n\n.pet-image {\n  max-width: 100px;\n  max-height: 100px;\n  border-radius: 8px;\n  border: 2px solid #d4af37;\n}\n\n.no-pets-message {\n  text-align: center;\n  font-size: 1.2rem;\n  margin-top: 20px;\n  color: #d4af37;\n}\n\n.status {\n  display: inline-block;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-weight: bold;\n  color: #1a1a1a;\n}\n\n.status.status-в-обработке {\n  background: #d4af37;\n}\n\n.status.status-доставлен {\n  background: #ffd700;\n}\n\n.status.status-отправлен {\n  background: #b8860b;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  gap: 10px;\n}\n\n.pagination button {\n  background: #d4af37;\n  color: #1a1a1a;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background 0.3s ease, transform 0.3s ease;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n}\n\n.pagination button:disabled {\n  background: #2a2a2a;\n  cursor: not-allowed;\n  box-shadow: none;\n}\n\n.pagination button:hover:not(:disabled) {\n  background: #b8860b;\n  transform: translateY(-2px);\n}\n\n.pagination span {\n  color: #d4af37;\n  font-weight: bold;\n}\n\n.action-button-container {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  background-color: #d4af37;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n  margin: 0 5px;\n}\n\n.action-button-container:hover {\n  background-color: #b8860b;\n  transform: scale(1.1);\n}\n\n.action-button-container i {\n  color: #1a1a1a;\n  font-size: 1.2rem;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}